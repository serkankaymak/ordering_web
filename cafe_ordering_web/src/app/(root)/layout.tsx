'use client';

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { AppGlobalProviders } from "../providers/AppGlobalProviders";
import { useTheme } from "@mui/material";
import { ToastContainer } from 'react-toastify';
import './global.css'

import { useRef } from "react";

//import "./globals.css";
import 'react-toastify/dist/ReactToastify.css';
import useMyMediaQuery, { Breakpoints } from "@/shared/hooks/UseMediaQuery";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const theme = useTheme();
  const isSmallScreen = useMyMediaQuery(Breakpoints.SMALL, 'max');
  const scrollableDivRef = useRef<HTMLDivElement>(null);

  return (
    <html lang="en" suppressHydrationWarning={true}>
      <body style={{ overflow: 'hidden' }} className={` ${geistSans.variable} ${geistMono.variable} antialiased bg-slate-900 `}
      >
        <AppGlobalProviders>
          {children}
          <ToastContainer aria-label={"toast-container"} />
        </AppGlobalProviders>
      </body>
    </html>
  );
}
